// Code generated by mockery v2.53.5. DO NOT EDIT.

package mocks

import (
	crawler "github.com/moonsub-kim/crawl-data-slack/internal/pkg/crawler"
	mock "github.com/stretchr/testify/mock"
)

// ChannelService is an autogenerated mock type for the ChannelService type
type ChannelService struct {
	mock.Mock
}

// GetChannels provides a mock function with no fields
func (_m *ChannelService) GetChannels() ([]crawler.Channel, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetChannels")
	}

	var r0 []crawler.Channel
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]crawler.Channel, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []crawler.Channel); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]crawler.Channel)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewChannelService creates a new instance of ChannelService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewChannelService(t interface {
	mock.TestingT
	Cleanup(func())
}) *ChannelService {
	mock := &ChannelService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
